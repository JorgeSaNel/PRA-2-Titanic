str(titanic_file_train)
# Chunk 37
library(nortest)
alpha = 0.05
col.names = colnames(titanic_file_train)
for (i in 1:ncol(titanic_file_train)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(titanic_file_train[,i]) | is.numeric(titanic_file_train[,i])) {
p_val = ad.test(titanic_file_train[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
# Format output
if (i < ncol(titanic_file_train) - 1) cat(", ")
if (i %% 3 == 0) cat("\n")
}
}
}
# Chunk 38
fligner.test(as.numeric(Survived) ~ Age, data = titanic_file_train)
fligner.test(as.numeric(Survived) ~ Fare, data = titanic_file_train)
fligner.test(as.numeric(Survived) ~ FamilySize, data = titanic_file_train)
# Chunk 39
wilcox.test(as.numeric(titanic_file_train$Survived), titanic_file_train$Age)
wilcox.test(as.numeric(titanic_file_train$Survived), titanic_file_train$Fare)
# Chunk 40
# Se crean 5 modelos con diferentes variables.
modelo_glm_1 <- glm(Survived ~ Pclass + Sex + Embarked, data = titanic_file_train, family = "binomial")
modelo_glm_2 <- glm(Survived ~ Age + Fare + FamilySize, data = titanic_file_train, family = "binomial")
modelo_glm_3 <- glm(Survived ~ Pclass + Sex + Age + Fare, data = titanic_file_train, family = "binomial")
modelo_glm_4 <- glm(Survived ~ Sex + Fare + Embarked + FamilySize, data = titanic_file_train, family = "binomial")
modelo_glm_5 <- glm(Survived ~ Pclass + Sex + Age + Fare + Embarked + FamilySize, data = titanic_file_train, family = "binomial")
# Chunk 41
library(rsq)
# Se crea la tabla de coeficientes
tabla.coeficientes <- matrix(c(1, rsq(modelo_glm_1, adj=TRUE),
2, rsq(modelo_glm_2, adj=TRUE),
3, rsq(modelo_glm_3, adj=TRUE),
4, rsq(modelo_glm_4, adj=TRUE),
5, rsq(modelo_glm_5, adj=TRUE)),
ncol = 2, byrow = TRUE
)
# Se muestra por pantalla la matriz creada
colnames(tabla.coeficientes) <- c("Modelo", "R^2")
tabla.coeficientes
# Chunk 42
summary(modelo_glm_3$aic)
summary(modelo_glm_5$aic)
library(installr)
library(pROC)
roc1 <- roc(titanic_file_train$Survived, modelo_glm_1$fitted.value)
roc2 <- roc(titanic_file_train$Survived, modelo_glm_2$fitted.value)
roc3 <- roc(titanic_file_train$Survived, modelo_glm_3$fitted.value)
roc4 <- roc(titanic_file_train$Survived, modelo_glm_4$fitted.value)
roc5 <- roc(titanic_file_train$Survived, modelo_glm_5$fitted.value)
plot(roc1, col = "blue", main = "Curva ROC - Árbol C50", xlab = "1 - especificidad", ylab = "sensibilidad")
lines(roc2, type = "l", col = "red")
lines(roc3, type = "l", col = "green")
lines(roc4, type = "l", col = "red")
lines(roc5, type = "l", col = "purple")
legend("bottomright", legend = c(paste("Modelo 1. AUC = ", round(auc(roc1), 2)), paste("Modelo 2. AUC = ", round(auc(roc2), 2)), paste("Modelo 3. AUC = ", round(auc(roc3), 2)), paste("Modelo 4. AUC = ", round(auc(roc4), 2)), paste("Modelo 5. AUC = ", round(auc(roc5), 2))), col = c("blue", "green", "red", "purple", "orange"), pch = c("--", "--", "--", "--", "--"), ncol = 1)
roc1 <- roc(titanic_file_train$Survived, modelo_glm_1$fitted.value)
roc2 <- roc(titanic_file_train$Survived, modelo_glm_2$fitted.value)
roc3 <- roc(titanic_file_train$Survived, modelo_glm_3$fitted.value)
roc4 <- roc(titanic_file_train$Survived, modelo_glm_4$fitted.value)
roc5 <- roc(titanic_file_train$Survived, modelo_glm_5$fitted.value)
plot(roc1, col = "blue", main = "Curva ROC - Árbol C50", xlab = "1 - especificidad", ylab = "sensibilidad")
lines(roc2, type = "l", col = "red")
lines(roc3, type = "l", col = "green")
lines(roc4, type = "l", col = "red")
lines(roc5, type = "l", col = "purple")
legend("bottomright", legend = c(paste("Modelo 1. AUC = ", round(auc(roc1), 2)), paste("Modelo 2. AUC = ", round(auc(roc2), 2)), paste("Modelo 3. AUC = ", round(auc(roc3), 2)), paste("Modelo 4. AUC = ", round(auc(roc4), 2)), paste("Modelo 5. AUC = ", round(auc(roc5), 2))), col = c("blue", "green", "red", "purple", "orange"), pch = c("--", "--", "--", "--", "--"), ncol = 1)
roc1 <- roc(titanic_file_train$Survived, modelo_glm_1$fitted.value)
roc2 <- roc(titanic_file_train$Survived, modelo_glm_2$fitted.value)
roc3 <- roc(titanic_file_train$Survived, modelo_glm_3$fitted.value)
roc4 <- roc(titanic_file_train$Survived, modelo_glm_4$fitted.value)
roc5 <- roc(titanic_file_train$Survived, modelo_glm_5$fitted.value)
plot(roc1, col = "blue", main = "Curva ROC - Árbol C50", xlab = "1 - especificidad", ylab = "sensibilidad")
lines(roc2, type = "l", col = "red")
lines(roc3, type = "l", col = "green")
lines(roc4, type = "l", col = "red")
lines(roc5, type = "l", col = "purple")
legend("bottomright", legend = c(paste("Modelo 1. AUC = ", round(auc(roc1), 2)), paste("Modelo 2. AUC = ", round(auc(roc2), 2)), paste("Modelo 3. AUC = ", round(auc(roc3), 2)), paste("Modelo 4. AUC = ", round(auc(roc4), 2)), paste("Modelo 5. AUC = ", round(auc(roc5), 2))), col = c("blue", "green", "red", "purple", "orange"), ncol = 1)
plot(roc1, col = "blue", main = "Curva ROC - Árbol C50", xlab = "1 - especificidad", ylab = "sensibilidad")
lines(roc2, type = "l", col = "red")
lines(roc3, type = "l", col = "green")
lines(roc4, type = "l", col = "blue")
lines(roc5, type = "l", col = "purple")
legend("bottomright", legend = c(paste("Modelo 1. AUC = ", round(auc(roc1), 2)), paste("Modelo 2. AUC = ", round(auc(roc2), 2)), paste("Modelo 3. AUC = ", round(auc(roc3), 2)), paste("Modelo 4. AUC = ", round(auc(roc4), 2)), paste("Modelo 5. AUC = ", round(auc(roc5), 2))), col = c("blue", "green", "red", "purple", "orange"), ncol = 1)
plot(roc1, col = "blue", main = "Curva ROC - Árbol C50", xlab = "1 - especificidad", ylab = "sensibilidad")
lines(roc2, type = "l", col = "red")
lines(roc3, type = "l", col = "green")
lines(roc4, type = "l", col = "orange")
lines(roc5, type = "l", col = "purple")
legend("bottomright", legend = c(paste("Modelo 1. AUC = ", round(auc(roc1), 2)), paste("Modelo 2. AUC = ", round(auc(roc2), 2)), paste("Modelo 3. AUC = ", round(auc(roc3), 2)), paste("Modelo 4. AUC = ", round(auc(roc4), 2)), paste("Modelo 5. AUC = ", round(auc(roc5), 2))), col = c("blue", "green", "red", "purple", "orange"), ncol = 1)
roc1 <- roc(titanic_file_train$Survived, modelo_glm_1$fitted.value)
roc2 <- roc(titanic_file_train$Survived, modelo_glm_2$fitted.value)
roc3 <- roc(titanic_file_train$Survived, modelo_glm_3$fitted.value)
roc4 <- roc(titanic_file_train$Survived, modelo_glm_4$fitted.value)
roc5 <- roc(titanic_file_train$Survived, modelo_glm_5$fitted.value)
plot(roc1, col = "blue", main = "Curva ROC - Árbol C50", xlab = "1 - especificidad", ylab = "sensibilidad")
lines(roc2, type = "l", col = "red")
lines(roc3, type = "l", col = "green")
lines(roc4, type = "l", col = "orange")
lines(roc5, type = "l", col = "purple")
legend("bottomright", legend = c(paste("Modelo 1. AUC = ", round(auc(roc1), 2)), paste("Modelo 2. AUC = ", round(auc(roc2), 2)), paste("Modelo 3. AUC = ", round(auc(roc3), 2)), paste("Modelo 4. AUC = ", round(auc(roc4), 2)), paste("Modelo 5. AUC = ", round(auc(roc5), 2))), col = c("blue", "red", "green", "orange", "purple"), ncol = 1)
plot(roc1, col = "blue", main = "Curva ROC - Árbol C50", xlab = "1 - especificidad", ylab = "sensibilidad")
lines(roc2, type = "l", col = "red")
lines(roc3, type = "l", col = "green")
lines(roc4, type = "l", col = "orange")
lines(roc5, type = "l", col = "purple")
legend("bottomright", legend = c(paste("Modelo 1. AUC = ", round(auc(roc1), 2)), paste("Modelo 2. AUC = ", round(auc(roc2), 2)), paste("Modelo 3. AUC = ", round(auc(roc3), 2)), paste("Modelo 4. AUC = ", round(auc(roc4), 2)), paste("Modelo 5. AUC = ", round(auc(roc5), 2))), col = c("blue", "red", "green", "orange", "purple"), pch = c("-", "-", "-", "-", "-"), ncol = 1)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
# Cargamos los paquetes R que vamos a usar
library(ggplot2)
library(dplyr)
# Guardamos el conjunto de datos test y train en un único dataset
test <- read.csv('../dataset/test.csv',stringsAsFactors = FALSE)
train <- read.csv('../dataset/train.csv', stringsAsFactors = FALSE)
# Unimos los dos conjuntos de datos en uno solo
titanic_file <- bind_rows(train, test)
# Verificamos la estructura del conjunto de datos
str(titanic_file)
# Chunk 3
apply(titanic_file,2, function(x) length(unique(x)))
# Chunk 4
# Discretizamos las variables con pocas clases
cols<-c("Survived","Pclass","Sex","Embarked")
for (i in cols){
titanic_file[,i] <- as.factor(titanic_file[,i])
}
# Después de los cambios, analizamos la nueva estructura del conjunto de datos
str(titanic_file)
# Chunk 5
filas=dim(train)[1]
ggplot(data=titanic_file[1:filas,],aes(x=Sex,fill=Survived))+geom_bar() + ggtitle("Representación de la variable Sexo con Supervivencia") + xlab("Sexo") + ylab("Conteo Supervivencia") + theme(plot.title = element_text(hjust = 0.5))
# Chunk 6
# Survivial como función de SibSp
ggplot(data = titanic_file[1:filas,],aes(x=SibSp,fill=Survived))+geom_bar() + ggtitle("Representación de la variable Hijos con Supervivencia") + xlab("Nº de Hijos") + ylab("Conteo Supervivencia") + theme(plot.title = element_text(hjust = 0.5))
# Chunk 7
# Survival como función de age:
titanic_file1<-titanic_file[1:filas,]
ggplot(data = titanic_file1[!(is.na(titanic_file[1:filas,]$Age)),],aes(x=Age,fill=Survived))+geom_histogram(binwidth =3) + ggtitle("Representación de la Edad con Supervivencia") + xlab("Edad") + ylab("Conteo Supervivencia") + theme(plot.title = element_text(hjust = 0.5))
# Chunk 8
colSums(is.na(titanic_file))
colSums(titanic_file=="")
# Chunk 9
colSums(titanic_file[, c("Age", "Fare")] == 0)
# Chunk 10
titanic_file[which(titanic_file$Fare == 0), "Fare"] = NA
# Chunk 11
titanic_file$Cabin <- NULL
# Chunk 12
dens <- density(titanic_file[!is.na(titanic_file$Age), "Age"])
n <- length(dens$y)                       #$
dx <- mean(diff(dens$x))                  # Typical spacing in x $
y.unit <- sum(dens$y) * dx                # Check: this should integrate to 1 $
dx <- dx / y.unit                         # Make a minor adjustment
x.mean <- sum(dens$y * dens$x) * dx
y.mean <- dens$y[length(dens$x[dens$x < x.mean])] #$
x.mode <- dens$x[i.mode <- which.max(dens$y)]
y.mode <- dens$y[i.mode]                  #$
y.cs <- cumsum(dens$y)                    #$
x.med <- dens$x[i.med <- length(y.cs[2*y.cs <= y.cs[n]])] #$
y.med <- dens$y[i.med]
plot(dens, col = "blue", main="Densidad - Age (clase 1)")
mapply(function(x,y,c) lines(c(x,x), c(0,y), lwd=2, col=c), c(x.mean, x.med), c(y.mean, y.med), c("green", "red"))
# Chunk 13
# Clase 1
dens <- density(titanic_file[!is.na(titanic_file$Age) & titanic_file$Pclass == 1, "Age"])
n <- length(dens$y)                       #$
dx <- mean(diff(dens$x))                  # Typical spacing in x $
y.unit <- sum(dens$y) * dx                # Check: this should integrate to 1 $
dx <- dx / y.unit                         # Make a minor adjustment
x.mean <- sum(dens$y * dens$x) * dx
y.mean <- dens$y[length(dens$x[dens$x < x.mean])] #$
x.mode <- dens$x[i.mode <- which.max(dens$y)]
y.mode <- dens$y[i.mode]                  #$
y.cs <- cumsum(dens$y)                    #$
x.med <- dens$x[i.med <- length(y.cs[2*y.cs <= y.cs[n]])] #$
y.med <- dens$y[i.med]
plot(dens, col = "blue", main="Densidad - Age (clase 1)")
mapply(function(x,y,c) lines(c(x,x), c(0,y), lwd=2, col=c), c(x.mean, x.med), c(y.mean, y.med), c("green", "red"))
# Clase 2
dens <- density(titanic_file[!is.na(titanic_file$Age) & titanic_file$Pclass == 2, "Age"])
n <- length(dens$y)                       #$
dx <- mean(diff(dens$x))                  # Typical spacing in x $
y.unit <- sum(dens$y) * dx                # Check: this should integrate to 1 $
dx <- dx / y.unit                         # Make a minor adjustment
x.mean <- sum(dens$y * dens$x) * dx
y.mean <- dens$y[length(dens$x[dens$x < x.mean])] #$
x.mode <- dens$x[i.mode <- which.max(dens$y)]
y.mode <- dens$y[i.mode]                  #$
y.cs <- cumsum(dens$y)                    #$
x.med <- dens$x[i.med <- length(y.cs[2*y.cs <= y.cs[n]])] #$
y.med <- dens$y[i.med]
plot(dens, col = "blue", main="Densidad - Age (clase 2)")
mapply(function(x,y,c) lines(c(x,x), c(0,y), lwd=2, col=c), c(x.mean, x.med), c(y.mean, y.med), c("green", "red"))
# Clase 3
dens <- density(titanic_file[!is.na(titanic_file$Age) & titanic_file$Pclass == 3, "Age"])
n <- length(dens$y)                       #$
dx <- mean(diff(dens$x))                  # Typical spacing in x $
y.unit <- sum(dens$y) * dx                # Check: this should integrate to 1 $
dx <- dx / y.unit                         # Make a minor adjustment
x.mean <- sum(dens$y * dens$x) * dx
y.mean <- dens$y[length(dens$x[dens$x < x.mean])] #$
x.mode <- dens$x[i.mode <- which.max(dens$y)]
y.mode <- dens$y[i.mode]                  #$
y.cs <- cumsum(dens$y)                    #$
x.med <- dens$x[i.med <- length(y.cs[2*y.cs <= y.cs[n]])] #$
y.med <- dens$y[i.med]
plot(dens, col = "blue", main="Densidad - Age (clase 3)")
mapply(function(x,y,c) lines(c(x,x), c(0,y), lwd=2, col=c), c(x.mean, x.med), c(y.mean, y.med), c("green", "red"))
# Chunk 14
titanic_file[is.na(titanic_file$Age) & titanic_file$Pclass == 1, "Age"] = median(titanic_file[!is.na(titanic_file$Age) & titanic_file$Pclass == 1, "Age"])
titanic_file[is.na(titanic_file$Age) & titanic_file$Pclass == 2, "Age"] = median(titanic_file[!is.na(titanic_file$Age) & titanic_file$Pclass == 2, "Age"])
titanic_file[is.na(titanic_file$Age) & titanic_file$Pclass == 3, "Age"] = median(titanic_file[!is.na(titanic_file$Age) & titanic_file$Pclass == 3, "Age"])
# Chunk 15
dens <- density(titanic_file[!is.na(titanic_file$Fare), "Fare"])
n <- length(dens$y)                       #$
dx <- mean(diff(dens$x))                  # Typical spacing in x $
y.unit <- sum(dens$y) * dx                # Check: this should integrate to 1 $
dx <- dx / y.unit                         # Make a minor adjustment
x.mean <- sum(dens$y * dens$x) * dx
y.mean <- dens$y[length(dens$x[dens$x < x.mean])] #$
x.mode <- dens$x[i.mode <- which.max(dens$y)]
y.mode <- dens$y[i.mode]                  #$
y.cs <- cumsum(dens$y)                    #$
x.med <- dens$x[i.med <- length(y.cs[2*y.cs <= y.cs[n]])] #$
y.med <- dens$y[i.med]
plot(dens, col = "blue", main="Densidad - Fare")
mapply(function(x,y,c) lines(c(x,x), c(0,y), lwd=2, col=c), c(x.mean, x.med), c(y.mean, y.med), c("green", "red"))
# Chunk 16
library(VIM)
mv <- titanic_file[, c("Survived", "Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Embarked")]
aux_df <- kNN(mv, variable = c("Fare"), k = 10, dist_var = c("Pclass", "Sex", "Age", "SibSp", "Parch", "Survived", "Embarked"))
titanic_file$Fare <- aux_df$Fare
# Chunk 17
uv <- unique(titanic_file$Embarked)
titanic_file[is.na(titanic_file$Embarked) | titanic_file$Embarked == "", "Embarked"] = uv[which.max(tabulate(match(titanic_file$Embarked, uv)))]
# Chunk 18
colSums(is.na(titanic_file))
colSums(titanic_file=="")
# Chunk 19
titanic_file %>% group_by(Survived) %>% count()
titanic_file %>% group_by(Pclass) %>% count()
titanic_file %>% group_by(SibSp) %>% count()
titanic_file %>% group_by(Parch) %>% count()
titanic_file %>% group_by(Embarked) %>% count()
# Chunk 20
boxplot(titanic_file$Age, main = "Boxplot - Age", ylab = "Age")
boxplot(titanic_file$Fare, main = "Boxplot - Fare", ylab = "Age")
# Chunk 21
IQR_age = quantile(titanic_file$Age)[4] - quantile(titanic_file$Age)[2]
IQR_fare = quantile(titanic_file$Fare)[4] - quantile(titanic_file$Fare)[2]
floor_age = quantile(titanic_file$Age)[2] - (1.5 * IQR_age)
floor_fare = quantile(titanic_file$Fare)[2] - (1.5 * IQR_fare)
cap_age = quantile(titanic_file$Age)[4] + (1.5 * IQR_age)
cap_fare = quantile(titanic_file$Fare)[4] + (1.5 * IQR_fare)
sort(titanic_file[titanic_file$Fare < floor_fare | titanic_file$Fare > cap_fare, "Fare"])
sort(titanic_file[titanic_file$Age < floor_age | titanic_file$Age > cap_age, "Age"])
# Chunk 22
titanic_file[titanic_file$Fare == max(titanic_file$Fare), c("Pclass", "Fare")]
# Chunk 23
titanic_file_train <- titanic_file[!is.na(titanic_file$Survived),]
# Chunk 24
# Se eliminan las variables
titanic_file_train$PassengerId <- NULL
titanic_file_train$Name <- NULL
titanic_file_train$Ticket <- NULL
titanic_file_train$Cabin <- NULL
# Se comprueba que no aparecen en el fichero
str(titanic_file_train)
# Chunk 25
# Construimos un atributo nuevo: family size.
titanic_file_train$FamilySize <- titanic_file_train$SibSp + titanic_file_train$Parch +1
# Observamos su distribucción
titanic_file1 <- titanic_file_train[1:filas,]
ggplot(data = titanic_file1[!is.na(titanic_file_train[1:filas,]$FamilySize),],aes(x=FamilySize,fill=Survived))+geom_histogram(binwidth =1,position="fill")+ylab("Frecuencia") + ggtitle("Representación de la nueva variable Tamaño de la familia con la variable objetivo") + xlab("Tamaño de la familia") + ylab("Conteo Supervivencia") + theme(plot.title = element_text(hjust = 0.5))
# Chunk 26
# Se convierten las variables al tipo numérico
titanic_file_train$SibSp <- as.numeric(titanic_file_train$SibSp)
titanic_file_train$Parch <- as.numeric(titanic_file_train$Parch)
# Se comprueba que el tipo de dato es correcto.
str(titanic_file_train)
# Chunk 27
titanic_corr <- titanic_file_train %>% select('Age', 'Fare', 'SibSp', 'Parch', 'FamilySize')
# Pequeña comprobación de que la copia se ha hecho correctamente
head(titanic_corr, 2)
# Chunk 28
library(ggcorrplot)
corr_norm <- cor(titanic_corr)
ggcorrplot(corr_norm, hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method="circle",
colors = c("tomato2", "white", "springgreen3"),
title="Correlación con datos Normalizados de Titanic",
ggtheme=theme_dark) + theme(plot.title = element_text(hjust = 0.5))
# Chunk 29
# Se eliminan las variables
titanic_file_train$SibSp <- NULL
titanic_file_train$Parch <- NULL
# Se comprueba que no aparecen en el fichero
str(titanic_file_train)
# Chunk 30
#install.packages("knitr") # Tabla [14]
library(knitr)
#install.packages("kableExtra") # Tabla [14]
library(kableExtra)
# Creamos la tabla de contingencia
tc_pclass <- table(titanic_file_train$Survived, titanic_file_train$Pclass)
# Le damos formato a la tabla de contingencia
tc_pclass %>% kable() %>% kable_styling(bootstrap_options = "striped", full_width = F)
# Chunk 31
chisq.test(tc_pclass)
# Chunk 32
# Creamos la tabla de contingencia
tc_sex <- table(titanic_file_train$Survived, titanic_file_train$Sex)
# Le damos formato a la tabla de contingencia
tc_sex %>% kable() %>% kable_styling(bootstrap_options = "striped", full_width = F)
# Chunk 33
chisq.test(tc_sex)
# Chunk 34
# Creamos la tabla de contingencia
tc_embarked <- table(titanic_file_train$Survived, titanic_file_train$Embarked)
tc_embarked <- tc_embarked[,-1]
# Le damos formato a la tabla de contingencia
tc_embarked %>% kable() %>% kable_styling(bootstrap_options = "striped", full_width = F)
# Chunk 35
chisq.test(tc_embarked)
# Chunk 36
str(titanic_file_train)
# Chunk 37
library(nortest)
alpha = 0.05
col.names = colnames(titanic_file_train)
for (i in 1:ncol(titanic_file_train)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(titanic_file_train[,i]) | is.numeric(titanic_file_train[,i])) {
p_val = ad.test(titanic_file_train[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
# Format output
if (i < ncol(titanic_file_train) - 1) cat(", ")
if (i %% 3 == 0) cat("\n")
}
}
}
# Chunk 38
fligner.test(as.numeric(Survived) ~ Age, data = titanic_file_train)
fligner.test(as.numeric(Survived) ~ Fare, data = titanic_file_train)
fligner.test(as.numeric(Survived) ~ FamilySize, data = titanic_file_train)
# Chunk 39
wilcox.test(as.numeric(titanic_file_train$Survived), titanic_file_train$Age)
wilcox.test(as.numeric(titanic_file_train$Survived), titanic_file_train$Fare)
# Chunk 40
# Se crean 5 modelos con diferentes variables.
modelo_glm_1 <- glm(Survived ~ Pclass + Sex + Embarked, data = titanic_file_train, family = "binomial")
modelo_glm_2 <- glm(Survived ~ Age + Fare + FamilySize, data = titanic_file_train, family = "binomial")
modelo_glm_3 <- glm(Survived ~ Pclass + Sex + Age + Fare, data = titanic_file_train, family = "binomial")
modelo_glm_4 <- glm(Survived ~ Sex + Fare + Embarked + FamilySize, data = titanic_file_train, family = "binomial")
modelo_glm_5 <- glm(Survived ~ Pclass + Sex + Age + Fare + Embarked + FamilySize, data = titanic_file_train, family = "binomial")
# Chunk 41
library(rsq)
# Se crea la tabla de coeficientes
tabla.coeficientes <- matrix(c(1, rsq(modelo_glm_1, adj=TRUE),
2, rsq(modelo_glm_2, adj=TRUE),
3, rsq(modelo_glm_3, adj=TRUE),
4, rsq(modelo_glm_4, adj=TRUE),
5, rsq(modelo_glm_5, adj=TRUE)),
ncol = 2, byrow = TRUE
)
# Se muestra por pantalla la matriz creada
colnames(tabla.coeficientes) <- c("Modelo", "R^2")
tabla.coeficientes
# Chunk 42
summary(modelo_glm_3$aic)
summary(modelo_glm_5$aic)
# Chunk 43
library(installr)
library(pROC)
roc1 <- roc(titanic_file_train$Survived, modelo_glm_1$fitted.value)
roc2 <- roc(titanic_file_train$Survived, modelo_glm_2$fitted.value)
roc3 <- roc(titanic_file_train$Survived, modelo_glm_3$fitted.value)
roc4 <- roc(titanic_file_train$Survived, modelo_glm_4$fitted.value)
roc5 <- roc(titanic_file_train$Survived, modelo_glm_5$fitted.value)
plot(roc1, col = "blue", main = "Curva ROC - Regresiones logísticas", xlab = "1 - especificidad", ylab = "sensibilidad")
lines(roc2, type = "l", col = "red")
lines(roc3, type = "l", col = "green")
lines(roc4, type = "l", col = "orange")
lines(roc5, type = "l", col = "purple")
legend("bottomright", legend = c(paste("Modelo 1. AUC = ", round(auc(roc1), 2)), paste("Modelo 2. AUC = ", round(auc(roc2), 2)), paste("Modelo 3. AUC = ", round(auc(roc3), 2)), paste("Modelo 4. AUC = ", round(auc(roc4), 2)), paste("Modelo 5. AUC = ", round(auc(roc5), 2))), col = c("blue", "red", "green", "orange", "purple"), pch = c("-", "-", "-", "-", "-"), ncol = 1)
# Chunk 44
new_female <- data.frame(
Pclass = "1",
Sex = "female",
Age = 25,
Fare = 80,
Embarked = "C",
FamilySize = 1
)
new_male <- data.frame(
Pclass = "1",
Sex = "male",
Age = 25,
Fare = 80,
Embarked = "C",
FamilySize = 1
)
# Predecir la supervivencia con el modelo logaritmico
predict(modelo_glm_5, new_female, type = "response")
predict(modelo_glm_5, new_male, type = "response")
# Chunk 45
levels(titanic_file_train$Embarked)[1] = "missing"
# Chunk 46
train_file <- titanic_file_train[!is.na(titanic_file_train$Survived),]
set.seed(666)
# Variable objetivo en Y
y <- train_file[,1]
# Resto de variables en X
X <- train_file[,2:7]
# Chunk 47
indexes = sample(1:nrow(titanic_file_train), size=floor((2/3)*nrow(titanic_file_train)))
trainX<-X[indexes,]
trainy<-y[indexes]
testX<-X[-indexes,]
testy<-y[-indexes]
# Chunk 48
#install.packages("C50")
library(C50)
model <- C50::C5.0(trainX, trainy,rules=TRUE )
summary(model)
# Chunk 49
model <- C50::C5.0(trainX, trainy)
plot(model)
# Chunk 50
predicted_model <- predict(model, testX, type="class" )
print(sprintf("La precisión del árbol es: %.4f %%",100*sum(predicted_model == testy) / length(predicted_model)))
# Chunk 51
mat_conf<-table(testy,Predicted=predicted_model)
mat_conf
# Chunk 52
library(gmodels)
CrossTable(testy, predicted_model,prop.chisq  = FALSE, prop.c = FALSE, prop.r =FALSE,dnn = c('Reality', 'Prediction'))
# Chunk 53
roc_c50 <- roc(as.numeric(testy), as.numeric(predicted_model))
plot(roc_c50, col = "blue", main = "Curva ROC - Árbol C50", xlab = "1 - especificidad", ylab = "sensibilidad")
legend("bottomright", legend = c(paste("Modelo 1. AUC = ", round(auc(roc_c50), 2))), col = c("blue"), pch = c("--"), ncol = 1)
# Chunk 54
# Librerías
library(rpart)
library(rpart.plot)
library(party)
# Algoritmo Rpart
rpart_data = rpart(y ~ ., data=X, method="class")
summary(rpart_data)
# Chunk 55
plot(rpart_data)
text(rpart_data)
# Chunk 56
rpart.plot(rpart_data, extra = 104, nn = TRUE)
predicted_model <- predict(rpart_data, testX, type="class")
print(sprintf("La precisión del árbol es: %.4f %%",100*sum(predicted_model == testy) / length(predicted_model)))
roc_c50 <- roc(as.numeric(testy), as.numeric(predicted_model))
roc_rpart <- roc(as.numeric(testy), as.numeric(predicted_model))
roc_rpart <- roc(as.numeric(testy), as.numeric(predicted_model))
plot(roc_rpart, col = "blue", main = "Curva ROC - Árbol C50", xlab = "1 - especificidad", ylab = "sensibilidad")
legend("bottomright", legend = c(paste("Modelo 1. AUC = ", round(auc(roc_rpart), 2))), col = c("blue"), pch = c("--"), ncol = 1)
colSums(titanic_file[, c("Age", "Fare")] == "0")
colSums(titanic_file[, c("Age", "Fare")] == 0)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
# Cargamos los paquetes R que vamos a usar
library(ggplot2)
library(dplyr)
# Guardamos el conjunto de datos test y train en un único dataset
test <- read.csv('../dataset/test.csv',stringsAsFactors = FALSE)
train <- read.csv('../dataset/train.csv', stringsAsFactors = FALSE)
# Unimos los dos conjuntos de datos en uno solo
titanic_file <- bind_rows(train, test)
# Verificamos la estructura del conjunto de datos
str(titanic_file)
# Chunk 3
apply(titanic_file,2, function(x) length(unique(x)))
# Chunk 4
# Discretizamos las variables con pocas clases
cols<-c("Survived","Pclass","Sex","Embarked")
for (i in cols){
titanic_file[,i] <- as.factor(titanic_file[,i])
}
# Después de los cambios, analizamos la nueva estructura del conjunto de datos
str(titanic_file)
# Chunk 5
filas=dim(train)[1]
ggplot(data=titanic_file[1:filas,],aes(x=Sex,fill=Survived))+geom_bar() + ggtitle("Representación de la variable Sexo con Supervivencia") + xlab("Sexo") + ylab("Conteo Supervivencia") + theme(plot.title = element_text(hjust = 0.5))
# Chunk 6
# Survivial como función de SibSp
ggplot(data = titanic_file[1:filas,],aes(x=SibSp,fill=Survived))+geom_bar() + ggtitle("Representación de la variable Hijos con Supervivencia") + xlab("Nº de Hijos") + ylab("Conteo Supervivencia") + theme(plot.title = element_text(hjust = 0.5))
# Chunk 7
# Survival como función de age:
titanic_file1<-titanic_file[1:filas,]
ggplot(data = titanic_file1[!(is.na(titanic_file[1:filas,]$Age)),],aes(x=Age,fill=Survived))+geom_histogram(binwidth =3) + ggtitle("Representación de la Edad con Supervivencia") + xlab("Edad") + ylab("Conteo Supervivencia") + theme(plot.title = element_text(hjust = 0.5))
# Chunk 8
colSums(is.na(titanic_file))
colSums(titanic_file=="")
colSums(titanic_file[, c("Age", "Fare")] == 0)
colSums(titanic_file[, c("Age", "Fare")] == 0.0)
colSums(titanic_file[, c("Age", "Fare")] == as.double(0))
